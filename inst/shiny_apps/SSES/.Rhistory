devtools:::install_packages("tcarruth/MSEtool")
devtools:::install_github("tcarruth/MSEtool")
install.packages("rlang")
devtools:::install_github("tcarruth/MSEtool")
install.packages("backports")
devtools:::install_github("tcarruth/MSEtool")
install.packages("digest")
devtools:::install_github("tcarruth/MSEtool")
install.packages("testthat")
devtools:::install_github("tcarruth/MSEtool")
install.packages("curl")
devtools:::install_github("tcarruth/MSEtool")
devtools:::install_github("tcarruth/MSEtool")
library(MSEtool)
?SRA_scope
CAA<-readRDS(file=paste0(datdir,"1 PS Fleet/CAAx_191115.rds"))
dim(CAA)
yind<-1:ny
Cat<-readRDS(file=paste0(datdir,"1 PS Fleet/Chistx_191202.rds"))
nf<-ncol(Cat)
ny<-nrow(Cat)
yind<-1:ny
setwd("C:/Users/tcar_/Dropbox/DFO_Herring_Shared")
datdir<-paste0(getwd(),"/Data Inputs/")
OMdir<-paste0(getwd(),"/Base OM Fit/")
cols<-rep(c("black","red","green","blue","grey","orange","pink"),2)
ltys<-rep(1:2,each=7)
Cat<-readRDS(file=paste0(datdir,"1 PS Fleet/Chistx_191202.rds"))
nf<-ncol(Cat)
ny<-nrow(Cat)
yind<-1:ny
Year<-as.numeric(row.names(Cat))
YearRNG<-range(Year)
Cat<-readRDS(file=paste0(datdir,"1 PS Fleet/Chistx_191202.rds"))
nf<-ncol(Cat)
ny<-nrow(Cat)
yind<-1:ny
Year<-as.numeric(row.names(Cat))
YearRNG<-range(Year)
matplot(Year,as.matrix(Cat),type='l',col=cols,lty=ltys,ylab="Catch (t)")
legend('topright',legend=names(Cat),text.col=cols)
Cat_p<-as.matrix(Cat)
Cat_p
YearRNG
CAA<-readRDS(file=paste0(datdir,"1 PS Fleet/CAAx_191115.rds"))
dim(CAA)
CAA
names(CAA[,1,])
class(CAA)
col.names(CAA[,1,])
dimnames(CAA)[[3]]
match(dimnames(CAA)[[3]],Year)
CAA<-readRDS(file=paste0(datdir,"1 PS Fleet/CAAx_191115.rds")) # age, fleet, year (needs to be year, age, fleet)
na<-dim(CAA)[1]                                               # age dimension
CAA_p<-array(NA,c(ny,na, nf))
CAA_yind<-match(dimnames(CAA)[[3]],Year)
CAA_ind<-as.matrix(expand.grid(1:na,1:nf,1:(dim(CAA)[3])))
CAA_p_ind<-CAAind[,3:1]
CAA_p_ind<-CAA_ind[,3:1]
head(CAA_p_ind)
CAA_p_ind[,1]<-CAA_yind[CAA_p_ind[,1]]
head(CAA_p_ind)
CAA_yind
CAA_p[CAA_p_yind,,]<-CAA[CAA_ind]
CAA_p[CAA_p_ind]<-CAA[CAA_ind]
CAA_p_ind
CAA_ind
dim(CAA)
dim(CAA_p)
apply(CAA_p_ind,2,max)
CAA<-readRDS(file=paste0(datdir,"1 PS Fleet/CAAx_191115.rds")) # age, fleet, year (needs to be year, age, fleet)
na<-dim(CAA)[1]                                               # age dimension
dat$CAA<-array(NA,c(ny,na, nf))
CAA_yind<-match(dimnames(CAA)[[3]],Year)
CAA_ind<-as.matrix(expand.grid(1:na,1:nf,1:(dim(CAA)[3])))
CAA_p_ind<-CAA_ind[,c(3,1,2)]
CAA_p_ind[,1]<-CAA_yind[CAA_p_ind[,1]]
dat$CAA[CAA_p_ind]<-CAA[CAA_ind]
CAA<-readRDS(file=paste0(datdir,"1 PS Fleet/CAAx_191115.rds")) # age, fleet, year (needs to be year, age, fleet)
na<-dim(CAA)[1]                                               # age dimension
data$CAA<-array(NA,c(ny,na, nf))
CAA_yind<-match(dimnames(CAA)[[3]],Year)
CAA_ind<-as.matrix(expand.grid(1:na,1:nf,1:(dim(CAA)[3])))
CAA_p_ind<-CAA_ind[,c(3,1,2)]
CAA_p_ind[,1]<-CAA_yind[CAA_p_ind[,1]]
data$CAA[CAA_p_ind]<-CAA[CAA_ind]
data$CAA<-array(NA,c(ny,na, nf))
data<-new('list')
data$CAA<-array(NA,c(ny,na, nf))
CAA_yind<-match(dimnames(CAA)[[3]],Year)
CAA_ind<-as.matrix(expand.grid(1:na,1:nf,1:(dim(CAA)[3])))
CAA_p_ind<-CAA_ind[,c(3,1,2)]
CAA_p_ind[,1]<-CAA_yind[CAA_p_ind[,1]]
data$CAA[CAA_p_ind]<-CAA[CAA_ind]
dim(data@CAA)
dim(data$CAA)
y<-44; a<-3; f=2; data$CAA[y,a,f]==CAA[a,f,y]
y<-44; y1=y-YearRNG[1]+1 a<-3; f=2; data$CAA[y,a,f]==CAA[a,f,y1]
y<-44; y1=y-YearRNG[1]+1; a<-3; f=2; data$CAA[y,a,f]==CAA[a,f,y1]
YearRNG
y<-44
y1=y-YearRNG[1]+1
y1
CAA_yind
y<-44; y1=matc(y,CAA_yind); a<-3; f=2; data$CAA[y,a,f]==CAA[a,f,y1]
y<-44; y1=match(y,CAA_yind); a<-3; f=2; data$CAA[y,a,f]==CAA[a,f,y1]
data@CAA[,,2]
data$CAA[,,2]
CAL<-readRDS(file=paste0(datdir,"1 PS Fleet/CALx_191115.rds")) # age, fleet, year (needs to be year, age, fleet)
dim(CAL)
dim(CAA)
CAL<-readRDS(file=paste0(datdir,"1 PS Fleet/CALx_191115.rds")) # age, fleet, year (needs to be year, age, fleet)
nl<-dim(CAL)[1]                                               # length class dimension
data$CAL<-array(NA,c(ny,nl, nf))
CAL_yind<-match(dimnames(CAL)[[3]],Year)
CAL_yind
CAL<-readRDS(file=paste0(datdir,"1 PS Fleet/CALx_191115.rds")) # age, fleet, year (needs to be year, age, fleet)
nl<-dim(CAL)[1]                                               # length class dimension
data$CAL<-array(NA,c(ny,nl, nf))
CAL_yind<-match(dimnames(CAL)[[3]],Year)
CAL_ind<-as.matrix(expand.grid(1:nl,1:nf,1:(dim(CAL)[3])))
CAL_p_ind<-CAL_ind[,c(3,1,2)]
CAL_p_ind[,1]<-CAL_yind[CAL_p_ind[,1]]
data$CAL[CAL_p_ind]<-CAL[CAL_ind]
y<-44; y1=match(y,CAL_yind); l<-11; f=2; data$CAL[y,l,f]==CAL[l,f,y1]; data$CAL[,,2] # Test of reshaping and transposition
YearRNG
shiny::runApp('C:/GitHub/SSES/inst/shiny_apps/SSES')
obj<-readrds("C:/temp/Landscape.rda")
obj<-readrds("C:/temp/Landscape.rda")
obj<-readRDS("C:/temp/Landscape.rda")
obj@misc$region_names
obj@misc$region_names<-c("2","3","4","5","6","7A","8","7B")
saveRDS(obj,"C:/temp/Landscape.rda")
runApp('C:/GitHub/SSES/inst/shiny_apps/SSES')
runApp('C:/GitHub/SSES/inst/shiny_apps/SSES')
input<-list()
input$Lsel<-rep(F,obj@nl)
input$Lsel[c(6:10,200)]<-T
input<-list()
lind<-rep(F,obj@nl)
lind[c(6:10,200)]<-T
input$Lsel<-obj@longnam[lind]
obj@GDD[obj@longnam%in%input$Lsel]
hist(obj@GDD[obj@longnam%in%input$Lsel])
runApp('C:/GitHub/SSES/inst/shiny_apps/SSES')
hist(obj@lakearea,col="#00009960")
hist(obj@lakearea,col="#00009960",border=NULL)
hist(obj@lakearea,col="#00009960",border=NA)
par(mfrow=c(3,2),mai=c(0.5,0.5,0.05,0.05))
selind<-obj@longnam%in%input$Lsel
hist(obj@lakearea,col="#0000ff60",border=NA)
hist(obj@lakearea[selind],col="#ff000060",border=NA,add=T)
selind
?hist
hist(obj@lakearea,col="#0000ff60",border=NA,freq=F)
hist(obj@lakearea[selind],col="#ff000060",border=NA,add=T,freq=F)
?hist
histplot<-function(obj,slotname,selind){
all<-slot(obj,slotname)
suby<-all[selind]
breaks<-seq(min(all)-0.01,max(all)+0.01,length.out=20)
hist(all,breaks=breaks,col="#0000ff60",border=NA,freq=F)
hist(obj@lakearea[selind],breaks=breaks,col="#ff000060",border=NA,add=T,freq=F)
}
histplot(obj,"lakearea")
histplot<-function(obj,slotname,selind){
all<-slot(obj,slotname)
suby<-all[selind]
breaks<-seq(min(all)-0.01,max(all)+0.01,length.out=20)
hist(all,breaks=breaks,col="#0000ff60",border=NA,freq=F)
hist(all[selind],breaks=breaks,col="#ff000060",border=NA,add=T,freq=F)
}
histplot(obj,"lakearea",selind)
slotname<-"lakearea"
all<-slot(obj,slotname)
min(all)
max(all)
seq(min(all)-0.01,max(all)+0.01,length.out=20)
all
all<-slot(obj,slotname)
suby<-all[selind]
breaks<-seq(min(all)-0.01,max(all)+0.01,length.out=50)
hist(all,breaks=breaks,col="#0000ff60",border=NA,freq=F)
all<-slot(obj,slotname)
suby<-all[selind]
breaks<-seq(quantile(all,0.01),quantile(all,0.99),length.out=30)
hist(all,breaks=breaks,col="#0000ff60",border=NA,freq=F)
hist(all[selind],breaks=breaks,col="#ff000060",border=NA,add=T,freq=F)
all<-slot(obj,slotname)
rng<-quantile(all,c(0.001,0.995))
suby<-all[selind]
all<-all[all>rng[1]&all<rng[2]]
suby<-suby[suby>rng[1]&suby<rng[2]]
breaks<-seq(rng[1],rng[2],length.out=30)
hist(all,breaks=breaks,col="#0000ff60",border=NA,freq=F)
hist(all[selind],breaks=breaks,col="#ff000060",border=NA,add=T,freq=F)
all<-slot(obj,slotname)
rng<-quantile(all,c(0.001,0.99))
suby<-all[selind]
all<-all[all>rng[1]&all<rng[2]]
suby<-suby[suby>rng[1]&suby<rng[2]]
breaks<-seq(rng[1],rng[2],length.out=30)
hist(all,breaks=breaks,col="#0000ff60",border=NA,freq=F)
hist(all[selind],breaks=breaks,col="#ff000060",border=NA,add=T,freq=F)
all<-slot(obj,slotname)
rng<-quantile(all,c(0.001,0.98))
suby<-all[selind]
all<-all[all>rng[1]&all<rng[2]]
suby<-suby[suby>rng[1]&suby<rng[2]]
breaks<-seq(rng[1],rng[2],length.out=30)
hist(all,breaks=breaks,col="#0000ff60",border=NA,freq=F)
hist(all[selind],breaks=breaks,col="#ff000060",border=NA,add=T,freq=F)
all<-slot(obj,slotname)
rng<-quantile(all,c(0.001,0.98))
suby<-all[selind]
all<-all[all>rng[1]&all<rng[2]]
suby<-suby[suby>rng[1]&suby<rng[2]]
breaks<-seq(rng[1],rng[2],length.out=30)
breaks
hist(all,breaks=breaks,col="#0000ff60",border=NA,freq=F)
hist(all[selind],breaks=breaks,col="#ff000060",border=NA,add=T,freq=F)
selind<-obj@longnam%in%input$Lsel
histplot<-function(obj,slotname,selind){
all<-slot(obj,slotname)
rng<-quantile(all,c(0.001,0.98))
suby<-all[selind]
all<-all[all>rng[1]&all<rng[2]]
suby<-suby[suby>rng[1]&suby<rng[2]]
breaks<-seq(rng[1],rng[2],length.out=30)
hist(all,breaks=breaks,col="#0000ff60",border=NA,freq=F)
hist(all[selind],breaks=breaks,col="#ff000060",border=NA,add=T,freq=F)
}
histplot(obj,"lakearea",selind)
all<-slot(obj,slotname)
rng<-quantile(all,c(0.001,0.98))
suby<-all[selind]
all<-all[all>rng[1]&all<rng[2]]
suby<-suby[suby>rng[1]&suby<rng[2]]
suby
all
selind
selind<-obj@longnam%in%input$Lsel
selind
selind[1:100]<-T
histplot(obj,"lakearea",selind)
histplot<-function(obj,slotname,selind,qs=c(0.01,0.99)){
all<-slot(obj,slotname)
rng<-quantile(all,qs)
suby<-all[selind]
all<-all[all>rng[1]&all<rng[2]]
suby<-suby[suby>rng[1]&suby<rng[2]]
breaks<-seq(rng[1],rng[2],length.out=30)
hist(all,breaks=breaks,col="#0000ff60",border=NA,freq=F)
hist(all[selind],breaks=breaks,col="#ff000060",border=NA,add=T,freq=F)
}
histplot(obj,"lakearea",selind)
histplot(obj,"lakearea",selind,qs=c(0,0.97))
histplot<-function(obj,slotname,selind,qs=c(0.01,0.99),namey=""){
all<-slot(obj,slotname)
rng<-quantile(all,qs)
suby<-all[selind]
all<-all[all>rng[1]&all<rng[2]]
suby<-suby[suby>rng[1]&suby<rng[2]]
breaks<-seq(rng[1],rng[2],length.out=30)
hist(all,breaks=breaks,col="#0000ff60",border=NA,freq=F)
hist(all[selind],breaks=breaks,col="#ff000060",border=NA,add=T,freq=F)
legend('topright',legend=namey,bty='n')
}
par(mfrow=c(3,2),mai=c(0.2,0.2,0.05,0.05))
selind<-obj@longnam%in%input$Lsel
histplot(obj,"lakearea",selind,qs=c(0,0.97),namey="Lake size (ha)")
histplot<-function(obj,slotname,selind,qs=c(0.01,0.99),namey=""){
all<-slot(obj,slotname)
rng<-quantile(all,qs)
suby<-all[selind]
all<-all[all>rng[1]&all<rng[2]]
suby<-suby[suby>rng[1]&suby<rng[2]]
breaks<-seq(rng[1],rng[2],length.out=30)
hist(all,breaks=breaks,col="#0000ff60",border=NA,freq=F,main="",xlab="",ylab="")
hist(all[selind],breaks=breaks,col="#ff000060",border=NA,add=T,freq=F)
legend('topright',legend=namey,bty='n')
}
par(mfrow=c(3,2),mai=c(0.3,0.3,0.05,0.05))
histplot(obj,"lakearea",selind,qs=c(0,0.97),namey="Lake size (ha)")
selind[1:50]<-T
histplot(obj,"lakearea",selind,qs=c(0,0.97),namey="Lake size (ha)")
histplot(obj,"GDD",selind,qs=c(0,0.97),namey="Growing Deg Days")
histplot(obj,"GDD",selind,qs=c(0,0.99),namey="Growing Deg Days")
histplot(obj,"TDS",selind,qs=c(0,0.99),namey="Lake size (ha)")
slotNames('Landscape')
dim(obj@pcxl)
apply(obj@pcsize*obj@pcxl[1,,],2,sum)
apply(array(obj@pcsize,c(obj@npc,obj@nl))*obj@pcxl[1,,],2,sum)
apply(array(obj@pcsize,c(obj@npc,obj@nl))*obj@pcxl[1,,],2,sum)/sum(obj@pcsize)
par(mfrow=c(3,2),mai=c(0.3,0.3,0.05,0.05))
#selind<-obj@longnam%in%input$Lsel
histplot(obj@lakearea,selind,qs=c(0,0.97),namey="Lake size (ha)")
histplot(obj@GDD,selind,qs=c(0,0.99),namey="Growing Deg Days")
mudist<-apply(array(obj@pcsize,c(obj@npc,obj@nl))*obj@pcxl[1,,],2,sum)/sum(obj@pcsize)
histplot(mudist,selind,qs=c(0,0.99),namey="Mean angler distance")
histplot<-function(all,selind,qs=c(0.01,0.99),namey=""){
rng<-quantile(all,qs)
suby<-all[selind]
all<-all[all>rng[1]&all<rng[2]]
suby<-suby[suby>rng[1]&suby<rng[2]]
breaks<-seq(rng[1],rng[2],length.out=30)
hist(all,breaks=breaks,col="#0000ff60",border=NA,freq=F,main="",xlab="",ylab="")
hist(all[selind],breaks=breaks,col="#ff000060",border=NA,add=T,freq=F)
legend('topright',legend=namey,bty='n')
}
par(mfrow=c(3,2),mai=c(0.3,0.3,0.05,0.05))
#selind<-obj@longnam%in%input$Lsel
histplot(obj@lakearea,selind,qs=c(0,0.97),namey="Lake size (ha)")
histplot(obj@GDD,selind,qs=c(0,0.99),namey="Growing Deg Days")
mudist<-apply(array(obj@pcsize,c(obj@npc,obj@nl))*obj@pcxl[1,,],2,sum)/sum(obj@pcsize)
histplot(mudist,selind,qs=c(0,0.99),namey="Mean angler distance")
histplot<-function(all,selind,qs=c(0.01,0.99),namey=""){
rng<-quantile(all,qs)
suby<-all[selind]
all<-all[all>rng[1]&all<rng[2]]
suby<-suby[suby>rng[1]&suby<rng[2]]
breaks<-seq(rng[1],rng[2],length.out=30)
hist(all,breaks=breaks,col="#0000ff60",border=NA,freq=F,main="",xlab="",ylab="")
abline(v=c(quantile(all,c(0.05,0.95)),mean(all),col='red',lty=c(2,2,1)))
abline(v=c(quantile(suby,c(0.05,0.95)),mean(suby),col='blue',lty=c(2,2,1)))
hist(all[selind],breaks=breaks,col="#ff000060",border=NA,add=T,freq=F)
legend('topright',legend=namey,bty='n')
}
par(mfrow=c(3,2),mai=c(0.3,0.3,0.05,0.05))
#selind<-obj@longnam%in%input$Lsel
histplot(obj@lakearea,selind,qs=c(0,0.97),namey="Lake size (ha)")
histplot(obj@GDD,selind,qs=c(0,0.99),namey="Growing Deg Days")
mudist<-apply(array(obj@pcsize,c(obj@npc,obj@nl))*obj@pcxl[1,,],2,sum)/sum(obj@pcsize)
histplot(mudist,selind,qs=c(0,0.99),namey="Mean angler distance (km)")
histplot<-function(all,selind,qs=c(0.01,0.99),namey=""){
rng<-quantile(all,qs)
suby<-all[selind]
all<-all[all>rng[1]&all<rng[2]]
suby<-suby[suby>rng[1]&suby<rng[2]]
breaks<-seq(rng[1],rng[2],length.out=30)
hist(all,breaks=breaks,col="#0000ff60",border=NA,freq=F,main="",xlab="",ylab="")
abline(v=c(quantile(all,c(0.05,0.95)),mean(all)),col='red',lty=c(2,2,1))
abline(v=c(quantile(suby,c(0.05,0.95)),mean(suby)),col='blue',lty=c(2,2,1))
hist(all[selind],breaks=breaks,col="#ff000060",border=NA,add=T,freq=F)
legend('topright',legend=namey,bty='n')
}
par(mfrow=c(3,2),mai=c(0.3,0.3,0.05,0.05))
#selind<-obj@longnam%in%input$Lsel
histplot(obj@lakearea,selind,qs=c(0,0.97),namey="Lake size (ha)")
histplot(obj@GDD,selind,qs=c(0,0.99),namey="Growing Deg Days")
mudist<-apply(array(obj@pcsize,c(obj@npc,obj@nl))*obj@pcxl[1,,],2,sum)/sum(obj@pcsize)
histplot(mudist,selind,qs=c(0,0.99),namey="Mean angler distance (km)")
slotNames('Landscape')
plotLand <- function(dummy=1){
par(mfrow=c(3,2),mai=c(0.3,0.3,0.05,0.05))
#selind<-obj@longnam%in%input$Lsel
histplot(obj@lakearea,selind,qs=c(0,0.97),namey="Lake size (ha)")
histplot(obj@GDD,selind,qs=c(0,0.99),namey="Growing Deg Days")
mudist<-apply(array(obj@pcsize,c(obj@npc,obj@nl))*obj@pcxl[1,,],2,sum)/sum(obj@pcsize)
histplot(mudist,selind,qs=c(0,0.99),namey="Mean angler distance (km)")
histplot(obj,"lakearea",selind,qs=c(0,0.97),namey="Lake size (ha)")
selind<-match(obj@longnam,input$Lsel)
hist(obj@GDD[selind])
}
runApp('C:/GitHub/SSES/inst/shiny_apps/SSES')
runApp('C:/GitHub/SSES/inst/shiny_apps/SSES')
dim(obj@lxslev)
apply(obj@lxslev,c(1,2),sum)
apply(obj@lxslev,c(1,3),sum)
dat<-apply(obj@lxslev,c(1,3),sum)
barplot(dat)
barplot(dat,beside=TRUE)
dat<-apply(obj@lxslev,c(1,3),sum)
rownames(dat)<-obj@stnam
barplot(dat,beside=TRUE)
dat<-apply(obj@lxslev,c(1,3),sum)
rownames(dat)<-obj@stnam
barplot(dat,beside=TRUE)
dat
dat<-apply(obj@lxslev,c(1,3),sum)
names(dat)<-obj@stnam
barplot(dat,beside=TRUE)
dat<-as.data.frame(apply(obj@lxslev,c(1,3),sum))
names(dat)<-obj@stnam
barplot(dat,beside=TRUE)
dat
?as.data.frame
dat<-as.data.frame(apply(obj@lxslev,c(1,3),sum),stringsAsFactors=F)
names(dat)<-obj@stnam
barplot(dat,beside=TRUE)
col.names(dat)<
col.names(dat)
colnames(dat)<-obj@stnam
barplot(dat,beside=TRUE)
dat<-apply(obj@lxslev,c(1,3),sum)
colnames(dat)<-obj@stnam
barplot(dat,beside=TRUE)
mcols<-c("black","green","orange","grey","pink","purple","azure")
plot(1:7,col=mcols,pch=19)
mcols<<-c("black","green","orange","grey","pink","purple","azure3")
plot(1:7,col=mcols,pch=19)
runApp('C:/GitHub/SSES/inst/shiny_apps/SSES')
source('C:/GitHub/SSES/inst/shiny_apps/SSES/Source/Plots/Landscape_plots.R', echo=TRUE)
shiny::runApp()
obj@misc$Mnams
obj<-readRDS("C:/temp/Landscape.rda")
obj@misc$Mnams
runApp()
1:length(obj@misc$Mnams)
dat<-apply(obj@lxslev,c(1,3),sum)
colnames(dat)<-obj@stnam
barplot(dat,beside=TRUE,col=mcols,border=NA)
legend('topleft',legend=obj@misc$Mnams,text.col=mcols[1:length(obj@misc$Mnams)],bty='n')
mcols
runApp()
runApp()
shiny::runApp()
runApp()
library(MSEtool)
?SRA_scope
myOM<-new('OM')
myOM@nsim <- 12 # lets start simple!
myOM@M<-c(0.1,0.2)
myOM@Linf<-c(155,165)
myOM@K<-c(0.2,0.3)
myOM@t0<-c(-1,-1)
slotNames(OM)
slotNames(myOM)
myOM@cpars
runApp()
ob
obj2<-obj
obj2@lxslev<-obj@lxslev*2
saveRDS(obj2,"C:/temp/Landscape_test.rda")
runApp()
obj<-readRDS(file="./Data/Landscape_test.rda")
par(mfrow=c(1,3),mai=c(0.3,0.3,0.05,0.05))
dat<-apply(lxslev,c(1,3),sum)
par(mfrow=c(1,3),mai=c(0.3,0.3,0.05,0.05))
dat<-apply(obj@lxslev,c(1,3),sum)
colnames(dat)<-obj@stnam
cols<-mcols[1:length(obj@misc$Mnams)]
barplot(dat,beside=TRUE,col=cols,border=NA)
legend('topleft',legend=obj@misc$Mnams,text.col=cols,bty='n')
dat
dim(obj2@lxslev)
obj2@lxslev[1,,]<-obj2@lxslev[1,,]/2
saveRDS(obj2,"C:/temp/Landscape_test.rda")
runApp()
shiny::runApp()
observeEvent(input$LAll,
updateSelectInput(session=session,"Lsel",selected=obj@longnam)
)
?setView
runApp()
runApp()
runApp()
obj<-readRDS("C:/temp/Landscape.rda")
obj@lxslev[1,,]<-obj@lxslev[1,,]*1.5
obj@lxattr
dim(obj@lxattr)
obj<-readRDS("C:/temp/Landscape.rda")
obj@lxslev[2,,]<-obj@lxslev[2,,]*1.5
obj@lxattr[2,,1]<-2
obj@lxattr[2,,2]<-1
obj@lxattr[2,,3]<-2
saveRDS(obj,"C:/temp/Lanscape_test.rda")
runApp()
runApp()
any(1,2:3)
runApp()
