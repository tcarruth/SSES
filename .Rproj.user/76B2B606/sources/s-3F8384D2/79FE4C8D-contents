# ====================================================================================================================
# === Spatial Social Ecological Systems   ============================================================================
# ====================================================================================================================
#
# Tom Carruthers UBC
# SSES version June 2019
#
# === Analysis 1. Impact of stock within / outside of 100km ===================================
#
# In this script, numerical optimization is used to find parameters for discard rate, marginal accessibility and
# regional participation rate
#
#
# --- Prerequisites  ----------------------------------------------------------------------------------------------

library(SSES)                                                          # Load the library
setwd("C:/Users/tcarruth/Dropbox/SSES")                                # Set working directory
set.seed(1)                                                            # Set a random seed (to ensure reproducibility)


# --- Load latest complete landscape object (584 lakes, 24 population centres) ------------------------------------

load(file='./Out/Landscape/Landscape_Step6')                           # Load a recent full landscape model
template<-obj                                                          # Keep a template

# --- Parameters for IFD calculations -----------------------------------------------------------------------------

uprat<-0.015   # When converging on a stable effort distribution is the contributing fraction of new effort
varind<-0.05   # The slope of the logit choice (low values are 'choosey' a value of 1 is proportional to utility)
nits<-300      # The number of IFD iterations


# --- Calculate IFD for base case landscape -----------------------------------------------------------------------

obj_base<-calceff(template,nits=nits,varind=varind,uprat=uprat,couch=T) # Run the LSM to convergence on the IFD


# --- Calculations ------------------------------------------------------------------------------------------------

mat<-obj@pcxl[1,,]<100                                  # Condition: distance matrix is less than 100km
cond100<-apply(mat,2,sum)>0                             # Lakes that are within 100 (at least on condition fails)
lonlim=range(obj@pcx)+c(-1,2)
latlim=range(obj@pcy)+c(-2,0.5)
map(database = "worldHires", xlim=lonlim, ylim=latlim,resolution = 0,fill=T,col="white",mar=rep(0.3,4),add=F,lwd=1)#mak
points(obj@lakex,obj@lakey,pch=19,cex=1.5,col='grey')
points(obj@pcx,obj@pcy,col='red',lwd=1.5)
points(obj@lakex[cond100],obj@lakey[cond100],pch=19,cex=1.5,col='blue')

obj_in_100<-template
obj_in_100@lxslev[1,cond100,]<-obj_in_100@lxslev[1,cond100,]*1.1  # 10% increase in stocking of lakes within 100km
obj_in_100<-calceff(obj_in_100,nits=nits,varind=varind,uprat=uprat,couch=T,startE=T) # Run the LSM to convergence on the IFD


obj_out_100<-template
obj_out_100@lxslev[1,!cond100,]<-obj_in_100@lxslev[1,!cond100,]*1.1  # 10% increase in stocking of lakes outside of 100km
obj_out_100<-calceff(obj_out_100,nits=nits,varind=varind,uprat=uprat,couch=T,startE=T) # Run the LSM to convergence on the IFD


# --- Plotting ---------------------------------------------------------------------------------------------------

# Things for plotting
load(file="./Data/region_list")                                   # a list of region polygons
aclassnam<-c("Generalists","Social","Enthusiasts","Occasional")   # names of the angler classes
popnams<-c(obj@pcnam)                                             # names of the population centres

# Effort difference within 100km by angler class and region
E1<-apply(obj_base@eff[1,1,,,],c(1,3),sum)
E2<-apply(obj_in_100@eff[1,1,,,],c(1,3),sum)
E1[E1==0]<-1
E2[E2==0]<-1
ED<-(E2/E1-1)*100

UTplot(ED,aclassnam,popnams,lonlim,latlim,obj,region_list,cex.axis=0.6)


# panel (c) effect change 100km more ---------------------

E1<-apply(obj_base@eff[1,1,,,],c(1,3),sum)
E2<-apply(obj_out_100@eff[1,1,,,],c(1,3),sum)
E1[E1==0]<-1
E2[E2==0]<-1
ED<-(E2/E1-1)*100

UTplot(ED,aclassnam,popnams,lonlim,latlim,obj,region_list,cex.axis=0.6)


# ==================================================================================================================================
# === End of script ================================================================================================================
# ==================================================================================================================================

